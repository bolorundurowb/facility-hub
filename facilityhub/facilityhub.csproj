<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <Nullable>enable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:44485</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <RootNamespace>FacilityHub</RootNamespace>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <DocumentationFile>bin\$(Configuration)\$(AssemblyName).xml</DocumentationFile>
        <NoWarn>1701;1702;1591</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Handlebars.Net" Version="2.1.4" />
        <PackageReference Include="MailKit" Version="4.3.0" />
        <PackageReference Include="ciu-parser" Version="1.0.0" />
        <PackageReference Include="CloudinaryDotNet" Version="1.25.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.15" />
        <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
        <PackageReference Include="dotenv.net" Version="3.1.3" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0" />
        <PackageReference Include="Mapster" Version="7.4.0" />
        <PackageReference Include="Mapster.DependencyInjection" Version="1.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.15" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.15">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="MimeTypeMapOfficial" Version="1.0.17" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="7.0.11" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL.Design" Version="1.1.0" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL.NetTopologySuite" Version="7.0.11" />
        <PackageReference Include="Pomelo.EntityFrameworkCore.MySql.Design" Version="1.1.2" />
        <PackageReference Include="Sentry.AspNetCore" Version="3.41.3" />
        <PackageReference Include="shortid" Version="4.0.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.5.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="..\.dockerignore">
          <Link>.dockerignore</Link>
        </Content>
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <Content Remove="ClientApp\**" />
        <None Remove="ClientApp\**" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="ClientApp\**" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="ClientApp\**" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="ClientApp\angular.json" />
      <_ContentIncludedByDefault Remove="ClientApp\package-lock.json" />
      <_ContentIncludedByDefault Remove="ClientApp\package.json" />
      <_ContentIncludedByDefault Remove="ClientApp\tsconfig.app.json" />
      <_ContentIncludedByDefault Remove="ClientApp\tsconfig.json" />
    </ItemGroup>



    <ItemGroup>
        <PackageReference Include="ciu-parser" Version="1.0.0" />
        <PackageReference Include="CloudinaryDotNet" Version="1.25.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.15" />
        <PackageReference Include="CloudinaryDotNet" Version="1.24.0" />
        <PackageReference Include="Handlebars.Net" Version="2.1.4" />
        <PackageReference Include="MailKit" Version="4.3.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.14" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.15" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.15"/>
    </ItemGroup>



    <ItemGroup>
      <None Remove="Templates\ForgotPassword.hbs" />
      <EmbeddedResource Include="Templates\ForgotPassword.hbs" />
      <None Remove="Templates\RootEmailTemplate.hbs" />
      <EmbeddedResource Include="Templates\RootEmailTemplate.hbs" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
